<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:GUIClient.ViewModels"
             xmlns:entities="clr-namespace:DAL.Entities;assembly=DAL"
             xmlns:converters="clr-namespace:GUIClient.Converters"
             xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="GUIClient.Views.HostsView"
             Name="HostsViewUC">
    
    <Design.DataContext>
        <viewModels:HostsViewModel/>
    </Design.DataContext>
    
    <UserControl.Resources>
        <converters:IntStatusToStringConverter x:Key="IntStatusToStringConverter"/>
        <converters:IntStatusToColorConverter x:Key="IntStatusToColorConverter"/>
        <converters:TeamIdToTeamNameConverter x:Key="TeamIdToTeamNameConverter"/>
        <converters:IntStatusToMaterialIconkindConverter x:Key="IntStatusToMaterialIconkindConverter"/>
        <converters:StringIdToImpactConverter x:Key="StringIdToImpactConverter"/>
        <converters:AnalystIdToAnalystNameConverter x:Key="AnalystIdToAnalystNameConverter"/>
    </UserControl.Resources>
    
    <Grid ColumnDefinitions="Auto,1,*">
        <!-- LEFT -->
        <Grid RowDefinitions="Auto,*,Auto,Auto" MinWidth="200">
            <TextBlock Grid.Row="0" Text="{Binding StrHosts}" Classes="header"/>
            <!-- Hosts List -->
            <ListBox Grid.Row="1"  
                     SelectedItem="{Binding SelectedHost}" 
                     ItemsSource="{Binding HostsList}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding HostName}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <!-- Filter BOX -->
            <TextBox Grid.Row="2" Text="{Binding SelectedHostsFilter}" IsVisible="{Binding ShowHostsFilter}"/>
            <!-- Host Control Bar -->
            <Grid Grid.Row="3" ColumnDefinitions="Auto, Auto,Auto, *, Auto,Auto">
                <Button Grid.Column="0" Name="BtAddHost"  Classes="subButton"
                        Command="{Binding BtAddHostClicked}"
                >
                    <avalonia:MaterialIcon Kind="Add"/>
                </Button>
                <Button Grid.Column="1" Name="BtEditHost" Classes="subButton type2"
                        Command="{Binding BtEditHostClicked}"
                        IsEnabled="True"
                       >
                    <avalonia:MaterialIcon Kind="Edit"/>
                </Button>
                <Button Grid.Column="2" Name="BtViewFilterRisk" Classes="subButton type2"
                        Command="{Binding BtFilterViewClicked}">
                    <avalonia:MaterialIcon Kind="SelectSearch"/>
                </Button>
                
                <Button Grid.Column="4" Name="BtReloadHosts" Classes="subButton type2"
                        Command="{Binding BtReloadHostsClicked}">
                    <avalonia:MaterialIcon Kind="Reload"/>
                </Button>
                <Button Grid.Column="5" Name="BtDeleteHost" Classes="subButton type3"
                        Command="{Binding BtDeleteHostClicked}">
                    <avalonia:MaterialIcon Kind="Delete"/>
                </Button>
            </Grid>
        </Grid>
        <GridSplitter Grid.Column="1"  Margin="2 0 3 0"/>
        <!-- RIGHT -->
        <Grid Grid.Column="2" RowDefinitions="*, Auto" ColumnDefinitions="*, Auto">
            <!-- HOST DETAIL -->
            <Grid Grid.Row="0" Grid.Column="0" RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*" Background="DimGray">
                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding StrDetails}" Classes="header"/>
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Id:" Margin="10 10 0 0 "/>
                <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding SelectedHost.Id}" Margin="5 10 0 0 "/>
                <TextBlock Grid.Row="2" Grid.Column="0" Text="HostName:" Margin="10 10 0 0 "/>
                <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding SelectedHost.HostName}" Margin="5 10 0 0 "/>
                <TextBlock Grid.Row="3" Grid.Column="0" Text="IP:" Margin="10 10 0 0 "/>
                <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding SelectedHost.Ip}" Margin="5 10 0 0 "/>
                <TextBlock Grid.Row="4" Grid.Column="0" Text="{Binding StrStatus}" Margin="10 10 0 0 "/>
                <TextBlock Grid.Row="4" Grid.Column="1" 
                           Text="{Binding SelectedHost.Status, 
                           Converter={StaticResource IntStatusToStringConverter}}"
                           Foreground="{Binding SelectedHost.Status, Converter={StaticResource IntStatusToColorConverter}}"
                           Margin="5 10 0 0 "/>
                <TextBlock Grid.Row="5" Grid.Column="0" Text="{Binding StrRegistrationDate}" Margin="10 10 0 0 "/>
                <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding SelectedHost.RegistrationDate}" Margin="5 10 0 0 "/>
                <TextBlock Grid.Row="6" Grid.Column="0" Text="{Binding StrResponsibleTeam}" Margin="10 10 0 0 "/>
                <TextBlock Grid.Row="6" Grid.Column="1" 
                           Text="{Binding SelectedHost.TeamId, Converter={StaticResource TeamIdToTeamNameConverter}}"
                           Margin="5 10 0 0 "/>
                <TextBlock Grid.Row="7" Grid.Column="0" Text="FQDN:" Margin="10 10 0 0 "/>
                <TextBlock Grid.Row="7" Grid.Column="1" Text="{Binding SelectedHost.Fqdn}" Margin="5 10 0 0 "/>
                <TextBlock Grid.Row="8" Grid.Column="0" Text="Mac Address:" Margin="10 10 0 0 "/>
                <TextBlock Grid.Row="8" Grid.Column="1" Text="{Binding SelectedHost.MacAddress}" Margin="5 10 0 0 "/>
                <TextBlock Grid.Row="9" Grid.Column="0" Text="{Binding StrOperatingSystem}" Margin="10 10 0 0 "/>
                <TextBlock Grid.Row="9" Grid.Column="1" Text="{Binding SelectedHost.Os}" Margin="5 10 0 0 "/>
            </Grid>
            <!-- HOST SERVICES -->
            <Grid Grid.Row="0" Grid.Column="1" RowDefinitions="Auto, *" Width="150">
                <TextBlock Grid.Row="0" Text="{Binding StrServices}" Classes="header"/>
                <ListBox Grid.Row="1"  
                         ItemsSource="{Binding SelectedHostsServices}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border CornerRadius="3" Background="DarkCyan" BorderThickness="3">
                                <StackPanel Orientation="Vertical" Background="SlateGray">
                                    <TextBlock Text="{Binding Name}" />
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding #HostsViewUC.DataContext.StrPort}" />
                                        <TextBlock Text="{Binding Port}" />
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                            
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            <!-- HOST VULNERABILITIES -->
            <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" RowDefinitions="Auto, *" Height="350">
                <TextBlock Grid.Row="0" Text="{Binding StrVulnerabilities}" Classes="header2"/>
                <DataGrid Grid.Row="1" ItemsSource="{Binding SelectedHostsVulnerabilities}">

                    <DataGrid.Columns>
                    <DataGridTextColumn IsReadOnly="True" 
                                        Header="ID" 
                                        Binding="{Binding Id}"/>
                    
                    <DataGridTemplateColumn Header="{Binding StrStatus}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="entities:Vulnerability">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <avalonia:MaterialIcon Kind="{Binding Status, 
                                    Converter={StaticResource IntStatusToMaterialIconkindConverter}}"
                                                           Foreground="{Binding Status, Converter={StaticResource IntStatusToColorConverter}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <DataGridTextColumn IsReadOnly="True" 
                                        Header="{Binding StrTitle}" 
                                        Binding="{Binding Title}"/>
                    <DataGridTextColumn IsReadOnly="True" 
                                        Header="{Binding StrScore}" 
                                        Binding="{Binding Score}"/>
                    <DataGridTextColumn IsReadOnly="True" 
                                        Header="{Binding StrImpact}" 
                                        Binding="{Binding Severity, 
                                        Converter={StaticResource StringIdToImpactConverter} }"/>
                    <DataGridTextColumn IsReadOnly="True" 
                                        Header="{Binding StrFirstDetection}" 
                                        Binding="{Binding FirstDetection}"/>
                    <DataGridTextColumn IsReadOnly="True" 
                                        Header="{Binding StrLastDetection}" 
                                        Binding="{Binding LastDetection}"/>
                    <DataGridTextColumn IsReadOnly="True" 
                                        Header="{Binding StrDetectionCount}" 
                                        Binding="{Binding DetectionCount}"/>
                    
                    <DataGridTextColumn IsReadOnly="True" 
                                        Header="{Binding StrFixTeam}" 
                                        Binding="{Binding FixTeamId, Converter={StaticResource TeamIdToTeamNameConverter}}"/>
                    <DataGridTextColumn IsReadOnly="True" 
                                        Header="{Binding StrAnalyst}" 
                                        Binding="{Binding AnalystId, Converter={StaticResource AnalystIdToAnalystNameConverter}}"/>

                </DataGrid.Columns>                    
                </DataGrid>
            </Grid>
        </Grid>
    </Grid>

</UserControl>
