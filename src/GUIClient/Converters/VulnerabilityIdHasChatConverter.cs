using System;
using System.Collections.Generic;
using System.Globalization;
using Avalonia.Data;
using Avalonia.Data.Converters;
using ClientServices.Interfaces;
using Model.Exceptions;

namespace GUIClient.Converters;

public class FixRequestIdHasChatConverter: BaseConverter, IValueConverter
{
    public object? Convert(object? value, Type targetType, object? parameter, CultureInfo culture)
    {
        //if (value is null) return "-";
        if (value is null) throw new InvalidParameterException("vulnerabilityId","Invalid null vulnerability id to convert");
        
        if (value is int sourceId && targetType.IsAssignableTo(typeof(bool)))
        {
            var ids = new List<int> {sourceId};
            var frService = GetService<IFixRequestsService>();
            var frequests = frService.GetVulnerabilitiesFixRequestAsync(ids).Result;

            return frequests.Count > 0;
        }
        // converter used for the wrong type
        return new BindingNotification(new InvalidCastException(), BindingErrorType.Error);
    }

    public object? ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture)
    {
        throw new NotSupportedException();
    }
}